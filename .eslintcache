[{"/Volumes/SSD/Dev/web/src/routes/routes.js":"1","/Volumes/SSD/Dev/web/src/index.tsx":"2","/Volumes/SSD/Dev/web/src/pages/Login/index.tsx":"3","/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/ClientsRegistration/styles.tsx":"4","/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/FeedbackVehicle/index.tsx":"5","/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/ClientsRegistration/index.tsx":"6","/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/FeedbackVehicle/styles.tsx":"7","/Volumes/SSD/Dev/web/src/services/api.ts":"8","/Volumes/SSD/Dev/web/src/pages/Dashboard/styles.tsx":"9","/Volumes/SSD/Dev/web/src/pages/Login/styles.tsx":"10","/Volumes/SSD/Dev/web/src/components/NavBar/index.tsx":"11","/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/index.tsx":"12","/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/FeedbackClient/index.tsx":"13","/Volumes/SSD/Dev/web/src/pages/Dashboard/index.jsx":"14","/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/FeedbackClient/styles.tsx":"15","/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/styles.tsx":"16","/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehiclesList/index.jsx":"17","/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehiclesList/styles.tsx":"18","/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/UsersList/index.jsx":"19","/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/UsersList/styles.tsx":"20","/Volumes/SSD/Dev/web/src/pages/Dashboard/Locations/LocationList/index.jsx":"21","/Volumes/SSD/Dev/web/src/pages/Dashboard/Locations/LocationList/styles.tsx":"22","/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehiclesOptions/styles.tsx":"23","/Volumes/SSD/Dev/web/src/pages/Dashboard/Reservations/ReservationList/index.jsx":"24","/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehicleRegistration/index.tsx":"25","/Volumes/SSD/Dev/web/src/pages/Dashboard/BicicletaRegistration/index.tsx":"26","/Volumes/SSD/Dev/web/src/pages/Dashboard/MotoRegistration/index.tsx":"27","/Volumes/SSD/Dev/web/src/pages/Dashboard/BusRegistration/index.tsx":"28","/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehiclesOptions/index.jsx":"29","/Volumes/SSD/Dev/web/src/components/NavBar/styles.tsx":"30","/Volumes/SSD/Dev/web/src/pages/Dashboard/MotoRegistration/styles.tsx":"31","/Volumes/SSD/Dev/web/src/pages/Dashboard/BusRegistration/styles.tsx":"32","/Volumes/SSD/Dev/web/src/pages/Dashboard/BicicletaRegistration/styles.tsx":"33","/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehicleRegistration/styles.tsx":"34","/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/UsersEdit/index.tsx":"35","/Volumes/SSD/Dev/web/src/pages/Dashboard/Reservations/ReservationList/styles.tsx":"36","/Volumes/SSD/Dev/web/src/pages/Dashboard/Locations/AddLocation/styles.tsx":"37","/Volumes/SSD/Dev/web/src/pages/Dashboard/Locations/AddLocation/index.jsx":"38"},{"size":2434,"mtime":1620760712130,"results":"39","hashOfConfig":"40"},{"size":219,"mtime":1617674032520,"results":"41","hashOfConfig":"40"},{"size":2074,"mtime":1620163463070,"results":"42","hashOfConfig":"40"},{"size":2872,"mtime":1620747536490,"results":"43","hashOfConfig":"40"},{"size":2461,"mtime":1618938528800,"results":"44","hashOfConfig":"40"},{"size":5345,"mtime":1620753989440,"results":"45","hashOfConfig":"40"},{"size":7009,"mtime":1620747415670,"results":"46","hashOfConfig":"40"},{"size":340,"mtime":1618679543370,"results":"47","hashOfConfig":"40"},{"size":1142,"mtime":1620747366600,"results":"48","hashOfConfig":"40"},{"size":1986,"mtime":1618679543370,"results":"49","hashOfConfig":"40"},{"size":828,"mtime":1618961812310,"results":"50","hashOfConfig":"40"},{"size":3721,"mtime":1620159829580,"results":"51","hashOfConfig":"40"},{"size":1759,"mtime":1620758062870,"results":"52","hashOfConfig":"40"},{"size":770,"mtime":1618962650120,"results":"53","hashOfConfig":"40"},{"size":7008,"mtime":1620747427290,"results":"54","hashOfConfig":"40"},{"size":6509,"mtime":1620747450170,"results":"55","hashOfConfig":"40"},{"size":2525,"mtime":1620759659740,"results":"56","hashOfConfig":"40"},{"size":2286,"mtime":1620758903040,"results":"57","hashOfConfig":"40"},{"size":4409,"mtime":1620759510580,"results":"58","hashOfConfig":"40"},{"size":1928,"mtime":1620758441140,"results":"59","hashOfConfig":"40"},{"size":2573,"mtime":1620767017250,"results":"60","hashOfConfig":"40"},{"size":1925,"mtime":1620760604510,"results":"61","hashOfConfig":"40"},{"size":7524,"mtime":1620747397880,"results":"62","hashOfConfig":"40"},{"size":2221,"mtime":1620762162770,"results":"63","hashOfConfig":"40"},{"size":18911,"mtime":1620741294380,"results":"64","hashOfConfig":"40"},{"size":8948,"mtime":1620741564780,"results":"65","hashOfConfig":"40"},{"size":13945,"mtime":1620741613210,"results":"66","hashOfConfig":"40"},{"size":14485,"mtime":1620741587830,"results":"67","hashOfConfig":"40"},{"size":2172,"mtime":1620743264470,"results":"68","hashOfConfig":"40"},{"size":783,"mtime":1620747172280,"results":"69","hashOfConfig":"40"},{"size":7029,"mtime":1620747443790,"results":"70","hashOfConfig":"40"},{"size":7029,"mtime":1620747446700,"results":"71","hashOfConfig":"40"},{"size":7029,"mtime":1620747440320,"results":"72","hashOfConfig":"40"},{"size":5298,"mtime":1620747598500,"results":"73","hashOfConfig":"40"},{"size":5339,"mtime":1620759527190,"results":"74","hashOfConfig":"40"},{"size":2213,"mtime":1620759590250,"results":"75","hashOfConfig":"40"},{"size":2872,"mtime":1620760851320,"results":"76","hashOfConfig":"40"},{"size":6265,"mtime":1620767159320,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s0uycq",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/SSD/Dev/web/src/routes/routes.js",[],"/Volumes/SSD/Dev/web/src/index.tsx",[],["168","169"],"/Volumes/SSD/Dev/web/src/pages/Login/index.tsx",["170"],"import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport Api from \"../../services/api\";\nimport { login } from \"../../services/auth\";\nimport { Container, Form, Input, LoginContainer, MainImage } from \"./styles\";\nimport bcrypt from \"bcryptjs\";\n\nconst Login: React.FC = () => {\n\n  const [email, setEmail] = useState(\"\")\n  const [passwordInput, setPassword] = useState(\"\")\n  const [error, setError] = useState(\"\")\n\n  const history = useHistory();\n\n  const handleSignIn = async e => {\n    e.preventDefault();\n\n    if (!email || !passwordInput) {\n      setError(\"Preencha e-mail e senha para continuar!\");\n      console.log(\"Preencha e-mail e senha para continuar!\");\n    } else {\n      try {\n        const salt = bcrypt.genSaltSync(12);\n        const hash = bcrypt.hashSync(passwordInput, salt);\n        const password = hash;\n        const response = await Api.post(\"/auth\", { email, password });\n        login(response.data.token)\n        // eslint-disable-next-line no-restricted-globals\n        history.push('/Dashboard')\n      } catch (err) {\n        setError('Houve um problema com o login, verifique suas credenciais. T.T')\n        console.log(\"error\")\n      }\n    }\n  };\n\n    return (\n      <Container>\n        <MainImage />\n        <LoginContainer>\n          <Form onSubmit={handleSignIn}>\n            <span className=\"title\">LOCAR</span>\n            <span className=\"subtitle\"></span>\n            <Input\n              type=\"text\"\n              placeholder=\"Usuário\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"Senha\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <button\n              type=\"submit\"\n              style={{\n                backgroundColor: \"#336699\",\n                color: \"#fff\",\n              }}\n            >\n              Entrar\n            </button>\n            <hr />\n          </Form>\n        </LoginContainer>\n      </Container>\n    );\n}\n\n\nexport default Login;\n",["171","172"],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/ClientsRegistration/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/FeedbackVehicle/index.tsx",["173","174","175","176","177","178","179","180","181","182","183","184","185"],"import React from \"react\";\nimport {\n    Container,\n    Section,\n    Card,\n    Title,\n    Subtitle,\n    Column1,\n    Column2,\n    Input,\n    Button,\n    FeedbackCard,\n    VehicleTypeCard,\n} from \"./styles\";\n\nimport NavBar from \"../../../../components/NavBar\";\n\nimport { MdPerson, MdDirectionsBus, MdDirectionsBike } from \"react-icons/md\";\nimport { IoMdCar } from \"react-icons/io\";\nimport { FaMotorcycle } from \"react-icons/fa\";\nimport vehicleFeedback from \"../../../../assets/vehicleFeedback.svg\";\nimport { Link } from \"react-router-dom\"\n\nimport Api from \"../../../../services/api\";\n\nconst FeedbackVehicle: React.FC = () => {\n\n    return (\n        <Section>\n            <NavBar />\n            <FeedbackCard style={{ padding: \"50px\"}}>\n                <div className=\"column1\">\n                    <Title >\n                        Veículo cadastrado com sucesso\n                    </Title>\n                    <Subtitle>\n                        O que deseja fazer agora?\n                    </Subtitle>\n                    <br />\n                    <div>\n                        <br />\n                        <button\n                            type=\"submit\"\n                            style={{\n                                border: \"none\",\n                                fontSize: \"20px\",\n                                backgroundColor: \"#FFFAFA\",\n                                color: \"#1E90FF\",\n                                font: \"arial\"\n                            }}>\n                            <Link to=\"/VehicleRegistration\">Cadastrar outro</Link>\n                        </button>\n                    </div>\n                    <br />\n                    <hr />\n                    <br />\n                    <div>\n                        <button\n                            type=\"submit\"\n                            style={{\n                                border: \"none\",\n                                fontSize: \"20px\",\n                                backgroundColor: \"#FFFAFA\",\n                                color: \"#1E90FF\",\n                                font: \"arial\"\n                            }}>\n                            <Link to=\"/Dashboard\">Voltar ao inicio</Link>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"column2\"><img src={vehicleFeedback} alt=\"\" /></div>\n            </FeedbackCard>\n        </Section>\n    )\n}\n\nexport default FeedbackVehicle;",["186","187"],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/ClientsRegistration/index.tsx",["188","189","190"],"import React, { useState } from \"react\";\nimport { MdPerson } from \"react-icons/md\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Section,\n  Card,\n  Title,\n  Subtitle,\n  Column1,\n  Column2,\n  Input,\n  Button,\n} from \"./styles\";\n\nimport NavBar from \"../../../../components/NavBar\";\n\nimport Api from \"../../../../services/api\";\n\nconst ClientsRegistration: React.FC = () => {\n  const history = useHistory();\n\n  const [nome, setClientName] = useState(\"\");\n  const [dataNascimento, setClientBirthDate] = useState(\"\");\n  const [cpf, setClientCpf] = useState(\"\");\n  const [telefone, setClientPhone] = useState(\"\");\n  const [cnh, setClientCnh] = useState(\"\");\n  const [rg, setClientRg] = useState(\"\");\n  const [email, setClientEmail] = useState(\"\");\n  const [numeroPis, setEmployerNumeroPis] = useState(\"\");\n\n  const handleSubmitClients = async (e) => {\n    e.preventDefault();\n\n    try {\n      if (!nome || !dataNascimento || !cpf || !telefone || !email) {\n        alert(\"Preencha todos os campos\");\n        return;\n      } else if (rg && cnh) {\n        const responsePartner = await Api.post(\"/partner\", {\n          cpf,\n          nome,\n          telefone,\n          dataNascimento,\n          email,\n          cnh,\n          rg,\n        });\n        history.push(\"/FeedbackClient\");\n      } else if (!rg && cnh && !numeroPis) {\n        const responseClient = await Api.post(\"/client\", {\n          cpf,\n          nome,\n          telefone,\n          dataNascimento,\n          email,\n          cnh,\n        });\n        history.push(\"/FeedbackClient\");\n      } else if (numeroPis) {\n        const responseEmployer = await Api.post(\"/employer\", {\n          cpf,\n          nome,\n          telefone,\n          dataNascimento,\n          email,\n          numeroPis,\n        });\n        history.push(\"/FeedbackClient\");\n      }\n    } catch (err) {\n      alert(\"Ocorreu algum erro ao adicionar o cliente\");\n    }\n  };\n\n  return (\n    <Section>\n\n    <NavBar />\n    <Card>\n      <Title>\n        <MdPerson className=\"title-icon\" size={\"1.3em\"} />\n        Usuários\n      </Title>\n      <Column1>\n        <form>\n          <div>\n            <Subtitle>Dados do usuário</Subtitle>\n            <div className=\"one-input\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"client_name\"\n                onChange={(e) => setClientName(e.target.value)}\n                placeholder=\"Nome completo\"\n                style={{\n                  width: \"100%\",\n                }}\n              />\n            </div>\n            <div className=\"two-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"client_birthDate\"\n                placeholder=\"Data de nascimento\"\n                onChange={(e) => setClientBirthDate(e.target.value)}\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"client_telephone\"\n                type=\"text\"\n                onChange={(e) => setClientPhone(e.target.value)}\n                placeholder=\"Telefone\"\n              />\n            </div>\n            <div className=\"one-input\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"client_email\"\n                onChange={(e) => setClientEmail(e.target.value)}\n                placeholder=\"Email\"\n                style={{\n                  width: \"100%\",\n                }}\n              />\n            </div>\n          </div>\n          <br />\n          <div style={{ whiteSpace: \"nowrap\" }}>\n            <Subtitle>Documentos</Subtitle>\n            <div className=\"two-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"client_cpf\"\n                onChange={(e) => setClientCpf(e.target.value)}\n                placeholder=\"CPF\"\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"client_cnh\"\n                type=\"text\"\n                onChange={(e) => setClientCnh(e.target.value)}\n                placeholder=\"CNH\"\n              />\n            </div>\n          </div>\n        </form>\n      </Column1>\n      <Column2>\n        <div>\n          <Subtitle>\n            <label>\n              <input type=\"checkbox\" name=\"Customer\" />\n            </label>\n            &nbsp;&nbsp;&nbsp; Cliente parceiro ?\n          </Subtitle>\n          <Input\n            id=\"standard-basic\"\n            name=\"client_rg\"\n            type=\"text\"\n            onChange={(e) => setClientRg(e.target.value)}\n            placeholder=\"RG\"\n          />\n          <br />\n          <br />\n          <Subtitle>\n            <label>\n              <input type=\"checkbox\" name=\"Customer\" />\n            </label>\n            &nbsp;&nbsp;&nbsp; Funcionário ?\n          </Subtitle>\n          <Input\n            id=\"standard-basic\"\n            name=\"employer_numeroPis\"\n            type=\"text\"\n            onChange={(e) => setEmployerNumeroPis(e.target.value)}\n            placeholder=\"Número Pis\"\n          />\n        </div>\n        <Button onClick={handleSubmitClients} type=\"submit\">\n          CADASTRAR\n        </Button>\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}></div>\n      </Column2>\n    </Card>\n    </Section>\n  );\n};\n\nexport default ClientsRegistration;\n",["191","192"],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/FeedbackVehicle/styles.tsx",[],"/Volumes/SSD/Dev/web/src/services/api.ts",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Login/styles.tsx",[],"/Volumes/SSD/Dev/web/src/components/NavBar/index.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/index.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/FeedbackClient/index.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/index.jsx",[],["193","194"],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/FeedbackClient/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehiclesList/index.jsx",[],["195","196"],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehiclesList/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/UsersList/index.jsx",["197"],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/UsersList/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Locations/LocationList/index.jsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Locations/LocationList/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehiclesOptions/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Reservations/ReservationList/index.jsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehicleRegistration/index.tsx",["198","199","200","201","202","203"],"import React, { useState } from \"react\";\nimport Select from \"react-select\";\n\nimport {\n  Section,\n  Title,\n  Subtitle,\n  Column1,\n  Column2,\n  Input,\n  Button,\n  VehicleTypeCard,\n} from \"./styles\";\n\nimport NavBar from \"../../../../components/NavBar\";\n\nimport { IoMdCar } from \"react-icons/io\";\n\nimport { useHistory } from \"react-router-dom\";\nimport Api from \"../../../../services/api\";\n\nconst VehicleRegistration: React.FC = () => {\n  const [marca, setVehicleMarca] = useState(\"\");\n  const [modelo, setVehicleModelo] = useState(\"\");\n  const [potencia, setVehiclePotencia] = useState(\"\");\n  const [status, setVehicleStatus] = useState(\"Em análise\");\n  const [placa, setVehiclePlaca] = useState(\"\");\n  const [cor, setVehicleCor] = useState(\"\");\n  const [ano, setVehicleAno] = useState();\n  const [tipoVeiculo, setVehicleTipo] = useState(\"Carro\");\n  const [numeroPortas, setVehiclePortas] = useState(\"\");\n  const [quilometragem, setVehicleQuilometragem] = useState(\"\");\n  const [renavan, setVehicleRenavam] = useState(\"\");\n  const [chassi, setVehicleChassi] = useState(\"\");\n  const [assentos, setVehicleAssentos] = useState(\"\");\n  const [valorLocacao, setVehicleDiaria] = useState(\"\");\n  const [carroParceiro, setCarroParceiro] = useState(\"\");\n  const [cpfParceiro, setVehicleCpfParceiro] = useState(\"\");\n  const [filial, setVehicleFilial] = useState(\"\");\n  const [imageUrl, setVehicleImagemUrl] = useState(\"\");\n  const [cilindradas, setVehicleCilindradas] = useState(\"\");\n  const [portaMalas, setVehiclePortaMalas] = useState(\"\");\n  const [tipoCombustivel, setVehicleCombustivel] = useState(\"\");\n\n  const history = useHistory();\n\n  const optionsMarcaCarro = [\n    { value: \"BMW\", label: \"BMW\" },\n    { value: \"Chevrolet\", label: \"Chevrolet\" },\n    { value: \"Fiat\", label: \"Fiat\" },\n    { value: \"Ford\", label: \"Ford\" },\n    { value: \"Honda\", label: \"Honda\" },\n    { value: \"Hyundai\", label: \"Hyundai\" },\n    { value: \"Jeep\", label: \"Jeep\" },\n    { value: \"Kia\", label: \"Kia\" },\n    { value: \"Mercedes-Benz\", label: \"Mercedes-Benz\" },\n    { value: \"Mitsubishi\", label: \"Mitsubishi\" },\n    { value: \"Nissan\", label: \"Nissan\" },\n    { value: \"Toyota\", label: \"Toyota\" },\n    { value: \"Vokswagen\", label: \"Vokswagen\" },\n  ];\n\n  const optionsStatus = [\n    { value: \"Locado\", label: \"Locado\" },\n    { value: \"Disponível\", label: \"Disponível\" },\n    { value: \"Em manutanção\", label: \"Em manutanção\" },\n    { value: \"Em análise\", label: \"Em análise\" },\n  ];\n\n  const optionsNPortas = [\n    { value: 2, label: \"2\" },\n    { value: 4, label: \"4\" },\n  ];\n\n  const optionsTipo = [\n    { value: 4, label: \"Bicicleta\" },\n    { value: 1, label: \"Carro\" },\n    { value: 3, label: \"Moto\" },\n    { value: 2, label: \"Ônibus\" },\n  ];\n\n  const optionsFilial = [\n    { value: 1, label: \"Unidade Alegrete\" },\n    { value: 3, label: \"Unidade Porto Alegre\" },\n    { value: 2, label: \"Unidade São Borja\" },\n    { value: 4, label: \"Unidade Uruguaiana\" },\n  ];\n\n  const optionsModeloCarro = [\n    { value: \"Argo\", label: \"Argo\" }, //Fiat\n    { value: \"ASX\", label: \"ASX\" }, //Mitsubishi\n    { value: \"Cerato\", label: \"Cerato\" }, //Kia\n    { value: \"City\", label: \"City\" }, // Honda\n    { value: \"Civic\", label: \"Civic\" }, // Honda\n    { value: \"Classe C\", label: \"Classe C\" }, //Mercedes-Benz\n    { value: \"Fit\", label: \"Fit\" }, // Honda\n    { value: \"GLA\", label: \"GLA\" }, //Mercedes-Benz\n    { value: \"Gol\", label: \"Gol\" }, //Vokswagen\n    { value: \"HB20\", label: \"HB20\" }, //Hyundai\n    { value: \"Ka\", label: \"Ka\" }, //Ford\n    { value: \"Leaf\", label: \"Leaf\" }, //Nissan / Elétrico\n    { value: \"March\", label: \"March\" }, //Nissan\n    { value: \"Onix Plus\", label: \"Onix Plus\" }, //Chovrolet\n    { value: \"Onix\", label: \"Onix\" }, //Chovrolet\n    { value: \"Outlander\", label: \"Outlander\" }, //Mitsubishi\n    { value: \"Pajero Sport\", label: \"Pajero Sport\" }, //Mitsubishi\n    { value: \"Renegade\", label: \"Renegade\" }, //Jeep\n    { value: \"Série 3\", label: \"Série 3\" }, //BMW\n    { value: \"Sportage\", label: \"Sportage\" }, //Kia\n    { value: \"Strada\", label: \"Strada\" }, //Fiat\n    { value: \"SW4\", label: \"SW4\" }, //Toyota\n    { value: \"T-Cross\", label: \"T-Cross\" }, //Vokswagen\n    { value: \"Toro\", label: \"Toro\" }, //Toro\n    { value: \"Versa\", label: \"Versa\" }, //Nissan\n    { value: \"X1\", label: \"X1\" }, //BMW\n  ];\n\n  const optionsPotencia = [\n    { value: \"72 CV\", label: \"72 CV\" },\n    { value: \"75 CV\", label: \"75 CV\" },\n    { value: \"77 CV\", label: \"77 CV\" },\n    { value: \"78 CV\", label: \"78 CV\" },\n    { value: \"80 CV\", label: \"80 CV\" },\n    { value: \"82 CV\", label: \"82 CV\" },\n    { value: \"84 CV\", label: \"84 CV\" },\n    { value: \"85 CV\", label: \"85 CV\" },\n    { value: \"88 CV\", label: \"88 CV\" },\n    { value: \"101 CV\", label: \"101 CV\" },\n    { value: \"104 CV\", label: \"104 CV\" },\n    { value: \"109 CV\", label: \"109 CV\" },\n    { value: \"110 CV\", label: \"110 CV\" },\n    { value: \"111 CV\", label: \"111 CV\" },\n    { value: \"114 CV\", label: \"114 CV\" },\n    { value: \"115 CV\", label: \"115 CV\" },\n    { value: \"116 CV\", label: \"116 CV\" },\n    { value: \"120 CV\", label: \"120 CV\" },\n    { value: \"123 CV\", label: \"123 CV\" },\n    { value: \"128 CV\", label: \"128 CV\" },\n    { value: \"130 CV\", label: \"130 CV\" },\n    { value: \"135 CV\", label: \"135 CV\" },\n    { value: \"136 CV\", label: \"136 CV\" },\n    { value: \"139 CV\", label: \"139 CV\" },\n    { value: \"149 CV\", label: \"149 CV\" },\n    { value: \"150 CV\", label: \"150 CV\" },\n    { value: \"155 CV\", label: \"155 CV\" },\n    { value: \"156 CV\", label: \"156 CV\" },\n    { value: \"157 CV\", label: \"157 CV\" },\n    { value: \"160 CV\", label: \"160 CV\" },\n    { value: \"163 CV\", label: \"163 CV\" },\n    { value: \"165 CV\", label: \"165 CV\" },\n    { value: \"167 CV\", label: \"167 CV\" },\n    { value: \"170 CV\", label: \"170 CV\" },\n    { value: \"171 CV\", label: \"171 CV\" },\n    { value: \"184 CV\", label: \"184 CV\" },\n    { value: \"190 CV\", label: \"190 CV\" },\n    { value: \"192 CV\", label: \"192 CV\" },\n    { value: \"204 CV\", label: \"204 CV\" },\n    { value: \"211 CV\", label: \"211 CV\" },\n    { value: \"231 CV\", label: \"231 CV\" },\n    { value: \"240 CV\", label: \"240 CV\" },\n    { value: \"292 CV\", label: \"292 CV\" },\n    { value: \"387 CV\", label: \"387 CV\" },\n  ];\n\n  const optionsAno = [\n    { value: 1990, label: 1990 },\n    { value: 1991, label: 1991 },\n    { value: 1992, label: 1992 },\n    { value: 1993, label: 1993 },\n    { value: 1994, label: 1994 },\n    { value: 1995, label: 1995 },\n    { value: 1996, label: 1996 },\n    { value: 1997, label: 1997 },\n    { value: 1998, label: 1998 },\n    { value: 1999, label: 1999 },\n    { value: 2000, label: 2000 },\n    { value: 2001, label: 2001 },\n    { value: 2002, label: 2002 },\n    { value: 2003, label: 2003 },\n    { value: 2004, label: 2004 },\n    { value: 2005, label: 2005 },\n    { value: 2006, label: 2006 },\n    { value: 2007, label: 2007 },\n    { value: 2008, label: 2008 },\n    { value: 2009, label: 2009 },\n    { value: 2010, label: 2010 },\n    { value: 2011, label: 2011 },\n    { value: 2012, label: 2012 },\n    { value: 2013, label: 2013 },\n    { value: 2014, label: 2014 },\n    { value: 2015, label: 2015 },\n    { value: 2016, label: 2016 },\n    { value: 2017, label: 2017 },\n    { value: 2018, label: 2018 },\n    { value: 2019, label: 2019 },\n    { value: 2020, label: 2020 },\n    { value: 2021, label: 2021 },\n  ];\n\n  const optionsCombustivel = [\n    { value: 1, label: \"Diesel\" },\n    { value: 2, label: \"Etanol\" },\n    { value: 3, label: \"Flex\" },\n    { value: 4, label: \"Gasolina\" },\n    { value: 5, label: \"GNV\" },\n    { value: 6, label: \"Híbrido/ Elétrico\" },\n  ];\n\n  const optionsPortaMalas = [\n    { value: \"146 Litros\", label: \"146 Litros\" },\n    { value: \"180 Litros\", label: \"180 Litros\" },\n    { value: \"257 Litros\", label: \"257 Litros\" },\n    { value: \"265 Litros\", label: \"265 Litros\" },\n    { value: \"275 Litros\", label: \"275 Litros\" },\n    { value: \"276 Litros\", label: \"276 Litros\" },\n    { value: \"285 Litros\", label: \"285 Litros\" },\n    { value: \"289 Litros\", label: \"289 Litros\" },\n    { value: \"300 Litros\", label: \"300 Litros\" },\n    { value: \"313 Litros\", label: \"313 Litros\" },\n    { value: \"320 Litros\", label: \"320 Litros\" },\n    { value: \"334 Litros\", label: \"334 Litros\" },\n    { value: \"359 Litros\", label: \"359 Litros\" },\n    { value: \"363 Litros\", label: \"363 Litros\" },\n    { value: \"400 Litros\", label: \"400 Litros\" },\n    { value: \"415 Litros\", label: \"415 Litros\" },\n    { value: \"420 Litros\", label: \"420 Litros\" },\n    { value: \"433 Litros\", label: \"433 Litros\" },\n    { value: \"435 Litros\", label: \"435 Litros\" },\n    { value: \"445 Litros\", label: \"445 Litros\" },\n    { value: \"449 Litros\", label: \"449 Litros\" },\n    { value: \"450 Litros\", label: \"450 Litros\" },\n    { value: \"460 Litros\", label: \"460 Litros\" },\n    { value: \"480 Litros\", label: \"480 Litros\" },\n    { value: \"491 Litros\", label: \"491 Litros\" },\n    { value: \"505 Litros\", label: \"505 Litros\" },\n    { value: \"519 Litros\", label: \"519 Litros\" },\n    { value: \"520 Litros\", label: \"520 Litros\" },\n    { value: \"560 Litros\", label: \"560 Litros\" },\n    { value: \"605 Litros\", label: \"605 Litros\" },\n    { value: \"715 Litros\", label: \"715 Litros\" },\n    { value: \"820 Litros\", label: \"820 Litros\" },\n    { value: \"868 Litros\", label: \"868 Litros\" },\n    { value: \"971 Litros\", label: \"971 Litros\" },\n    { value: \"1100 Litros\", label: \"1100 Litros\" },\n    { value: \"1354 Litros\", label: \"1354 Litros\" },\n  ];\n\n  const optionsCilindradas = [\n    { value: \"1.0\", label: \"1.0\" },\n    { value: \"1.2\", label: \"1.2\" },\n    { value: \"1.3\", label: \"1.3\" },\n    { value: \"1.4\", label: \"1.4\" },\n    { value: \"1.5\", label: \"1.5\" },\n    { value: \"1.6\", label: \"1.6\" },\n    { value: \"1.8\", label: \"1.8\" },\n    { value: \"2.0\", label: \"2.0\" },\n    { value: \"2.2\", label: \"2.2\" },\n    { value: \"2.3\", label: \"2.3\" },\n    { value: \"2.4\", label: \"2.4\" },\n    { value: \"2.5\", label: \"2.5\" },\n    { value: \"2.7\", label: \"2.7\" },\n    { value: \"2.8\", label: \"2.8\" },\n    { value: \"3.0\", label: \"3.0\" },\n    { value: \"3.2\", label: \"3.2\" },\n    { value: \"3.3\", label: \"3.3\" },\n    { value: \"3.5\", label: \"3.5\" },\n    { value: \"3.7\", label: \"3.7\" },\n    { value: \"3.8\", label: \"3.8\" },\n    { value: \"4.0\", label: \"4.0\" },\n  ];\n\n  const handleSubmitVehicle = async (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n\n    console.log(marca);\n    console.log(modelo);\n    console.log(status);\n    console.log(potencia);\n    console.log(placa);\n    console.log(cor);\n    console.log(ano);\n    console.log(tipoCombustivel);\n    console.log(numeroPortas);\n    console.log(quilometragem);\n    console.log(renavan);\n    console.log(chassi);\n    console.log(valorLocacao);\n    console.log(carroParceiro);\n    console.log(cpfParceiro);\n    console.log(filial);\n    console.log(imageUrl);\n    console.log(cilindradas);\n    console.log(portaMalas);\n    console.log(tipoVeiculo);\n    console.log(assentos);\n\n\n    try {\n      if (\n        !modelo ||\n        !status ||\n        !potencia ||\n        !placa ||\n        !cor ||\n        !ano ||\n        !tipoCombustivel ||\n        !numeroPortas ||\n        !quilometragem ||\n        !renavan ||\n        !chassi ||\n        !valorLocacao ||\n        !cilindradas ||\n        !filial ||\n        !imageUrl ||\n        !portaMalas ||\n        !tipoVeiculo ||\n        !assentos\n      ) {\n        alert(\"Preencha todos os campos\");\n        return;\n      } else if (carroParceiro === \"on\" && cpfParceiro) {\n        const response = await Api.post(\"/automobile\", {\n          marca,\n          modelo,\n          status,\n          potencia,\n          placa,\n          cor,\n          ano,\n          tipoCombustivel,\n          numeroPortas,\n          quilometragem,\n          renavan,\n          chassi,\n          valorLocacao,\n          carroParceiro: true,\n          cpfParceiro,\n          cilindradas,\n          filial,\n          imageUrl: null,\n          portaMalas,\n          tipoVeiculo,\n          assentos,\n        });\n        history.push(\"/FeedbackVehicle\");\n      } else if (carroParceiro === \"\" && !cpfParceiro) {\n        const response = await Api.post(\"/automobile\", {\n          marca,\n          modelo,\n          status,\n          potencia,\n          placa,\n          cor,\n          ano,\n          tipoCombustivel,\n          numeroPortas,\n          quilometragem,\n          renavan,\n          chassi,\n          valorLocacao,\n          carroParceiro: false,\n          cpfParceiro: 0,\n          cilindradas,\n          filial,\n          imageUrl:null,\n          portaMalas,\n          tipoVeiculo,\n          assentos,\n        });\n        history.push(\"/FeedbackVehicle\");\n      }\n    } catch (err) {\n      alert(\"Ocorreu algum erro ao adicionar o veiculo\");\n    }\n  };\n\n  return (\n    <Section>\n      <NavBar />\n      <VehicleTypeCard style={{ padding: \"30px\" }}>\n        <Title>\n          <IoMdCar className=\"title-icon\" size={\"1.3em\"} />\n          Carro\n        </Title>\n        <Column1>\n          <div>\n            <Subtitle>Dados do veículo</Subtitle>\n            <div className=\"form-row\"></div>\n            <div className=\"three-inputs\">\n              <Select\n                options={optionsMarcaCarro}\n                name=\"vehicle_marca\"\n                placeholder=\"Marca\"\n                onChange={(e) => setVehicleMarca(e.value)}\n              />\n              <Select\n                options={optionsModeloCarro}\n                name=\"vehicle_modelo\"\n                placeholder=\"Modelo\"\n                onChange={(e) => setVehicleModelo(e.value)}\n              />\n              <Select\n                options={optionsCombustivel}\n                name=\"vehicle_tipoCombustivel\"\n                placeholder=\"Tipo de Combustível\"\n                onChange={(e) => setVehicleCombustivel(e.value)}\n              />\n              <Select\n                options={optionsAno}\n                name=\"vehicle_ano\"\n                placeholder=\"Ano\"\n                onChange={(e) => setVehicleAno(e.value)}\n              />\n              <Select\n                options={optionsCilindradas}\n                name=\"vehicle_cilindradas\"\n                placeholder=\"Cilindradas\"\n                onChange={(e) => setVehicleCilindradas(e.value)}\n              />\n              <Select\n                options={optionsPotencia}\n                name=\"vehicle_potencia\"\n                placeholder=\"Potencia\"\n                onChange={(e) => setVehiclePotencia(e.value)}\n              />\n              <Select\n                options={optionsNPortas}\n                name=\"bus_nPortas\"\n                placeholder=\"Nº de Portas\"\n                onChange={(e) => setVehiclePortas(e.value)}\n              />\n              <Select\n                options={optionsPortaMalas}\n                name=\"bus_portaMalas\"\n                placeholder=\"Capacidade Porta Malas\"\n                onChange={(e) => setVehiclePortaMalas(e.value)}\n              />\n            </div>\n            <div className=\"three-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"vehicle_cor\"\n                placeholder=\"Cor\"\n                onChange={(e) => setVehicleCor(e.target.value)}\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"vehicle_Quilometragem\"\n                type=\"text\"\n                placeholder=\"Quilometragem\"\n                onChange={(e) => setVehicleQuilometragem(e.target.value)}\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"vehicle_placa\"\n                type=\"text\"\n                placeholder=\"Placa\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setVehiclePlaca(e.target.value)}\n              />\n            </div>\n            <div className=\"two-inputs\">\n              <Input\n                id=\"standard-basic\"\n                name=\"vehicle_renavam\"\n                type=\"text\"\n                placeholder=\"Renavam\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setVehicleRenavam(e.target.value)}\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"vehicle_chassi\"\n                placeholder=\"Chassi\"\n                onChange={(e) => setVehicleChassi(e.target.value)}\n              />\n            </div>\n            <div className=\"three-inputs\">\n              <Input\n                id=\"standard-basic\"\n                name=\"vehicle_Assentos\"\n                type=\"text\"\n                placeholder=\"Nº de Assentos\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setVehicleAssentos(e.target.value)}\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"vehicle_status\"\n                placeholder=\"Status: Em análise\"\n                disabled\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"vehicle_imageUrl\"\n                placeholder=\"ImagemUrl\"\n                onChange={(e) => setVehicleImagemUrl(e.target.value)}\n              />\n            </div>\n          </div>\n        </Column1>\n        <Column2>\n          <div>\n            <br />\n            <br />\n            <br />\n            <div className=\"one-input\" style={{ whiteSpace: \"nowrap\" }}>\n              <Subtitle>\n                <label>\n                  <input\n                    onChange={(e) => setCarroParceiro(e.target.value)}\n                    type=\"checkbox\"\n                    name=\"Customer\"\n                  />\n                  &nbsp;&nbsp;&nbsp; Veículo de cliente parceiro?\n                </label>\n              </Subtitle>\n              <Input\n                id=\"standard-basic\"\n                type=\"text\"\n                name=\"vehicle_cpfParceiro\"\n                placeholder=\"CPF Parceiro\"\n                onChange={(e) => setVehicleCpfParceiro(e.target.value)}\n              />\n            </div>\n            <Subtitle>Dados para locação</Subtitle>\n            <div className=\"two-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"vehicle_diaria\"\n                placeholder=\"Valor da diária\"\n                onChange={(e) => setVehicleDiaria(e.target.value)}\n              />\n              <Select\n                options={optionsFilial}\n                name=\"vehicle_filial\"\n                placeholder=\"Filial de origem\"\n                onChange={(e) => setVehicleFilial(e.value)}\n              />\n            </div>\n            <br />\n            <br />\n          </div>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Button onClick={handleSubmitVehicle} type=\"submit\">\n              CADASTRAR\n            </Button>\n          </div>\n        </Column2>\n      </VehicleTypeCard>\n    </Section>\n  );\n};\n\nexport default VehicleRegistration;\n","/Volumes/SSD/Dev/web/src/pages/Dashboard/BicicletaRegistration/index.tsx",["204","205","206","207"],"import React, { useState } from \"react\";\nimport Select from \"react-select\";\n\nimport {\n  Section,\n  Title,\n  Subtitle,\n  Column1,\n  Column2,\n  Input,\n  Button,\n  VehicleTypeCard,\n} from \"./styles\";\n\nimport NavBar from \"../../../components/NavBar\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport Api from \"../../../services/api\";\nimport { MdDirectionsBike } from \"react-icons/md\";\n\nconst BicicletaRegistration: React.FC = () => {\n  const [marca, setBicicletaMarca] = useState(\"\");\n  const [modelo, setBicicletaModelo] = useState(\"\");\n  const [status, setBicicletaStatus] = useState(\"Em análise\");\n  const [cor, setBicicletaCor] = useState(\"\");\n  const [tipoVeiculo, setBicicletaTipo] = useState(\"Bicicleta\");\n  const [assentos, setBicicletaAssentos] = useState(\"\");\n  const [valorLocacao, setBicicletaDiaria] = useState(\"\");\n  const [carroParceiro, setCarroParceiro] = useState(\"\");\n  const [cpfParceiro, setBicicletaCpfParceiro] = useState(\"\");\n  const [filial, setBicicletaFilial] = useState(\"\");\n  const [imageUrl, setBicicletaImagemUrl] = useState(\"\");\n  const [tipoAro, setTipoAro] = useState(\"\");\n  const [marcha, setMarcha] = useState(\"\");\n\n  const history = useHistory();\n\n  const optionsMarcaBicicleta = [\n    { value: \"Coli\", label: \"Coli\" },\n    { value: \"Caloi\", label: \"Caloi\" },\n    { value: \"Track & Bikes\", label: \"Track & Bikes\" },\n    { value: \"Vikingx\", label: \"Vikingx\" },\n    { value: \"Lotus\", label: \"Lotus\" },\n    { value: \"Monark\", label: \"Monark\" },\n  ];\n\n  const optionsStatus = [\n    { value: \"Locado\", label: \"Locado\" },\n    { value: \"Disponível\", label: \"Disponível\" },\n    { value: \"Em manutanção\", label: \"Em manutanção\" },\n    { value: \"Em análise\", label: \"Em análise\" },\n  ];\n\n  const optionsTipo = [\n    { value: 4, label: \"Bicicleta\" },\n    { value: 1, label: \"Carro\" },\n    { value: 3, label: \"Moto\" },\n    { value: 2, label: \"Ônibus\" },\n  ];\n\n  const optionsFilial = [\n    { value: 1, label: \"Unidade Alegrete\" },\n    { value: 3, label: \"Unidade Porto Alegre\" },\n    { value: 2, label: \"Unidade São Borja\" },\n    { value: 4, label: \"Unidade Uruguaiana\" },\n  ];\n\n  const optionsMarcha = [\n    { value: \"Possui\", label: \"Possui\" },\n    { value: \"Não possui\", label: \"Não possui\" },\n  ];\n\n  const optionsModeloBicicleta = [\n    { value: \"Ciça\", label: \"Ciça\" },\n    { value: \"Velox\", label: \"Velox\" },\n    { value: \"Niner\", label: \"Niner\" },\n    { value: \"Tuff25\", label: \"Tuff25\" },\n    { value: \"Aluminium\", label: \"Aluminium\" },\n    { value: \"Explorer\", label: \"Explorer\" },\n    { value: \"Barra Circular VB\", label: \"Barra Circular VB\" },\n  ];\n\n  const handleSubmitBicicleta = async (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n\n    console.log(marca);\n    console.log(modelo);\n    console.log(status);\n    console.log(cor);\n    console.log(valorLocacao);\n    console.log(carroParceiro);\n    console.log(cpfParceiro);\n    console.log(filial);\n    console.log(imageUrl);\n    console.log(tipoVeiculo);\n    console.log(assentos);\n    console.log(marcha);\n\n    try {\n      if (\n        !modelo ||\n        !status ||\n        !cor ||\n        !valorLocacao ||\n        !filial ||\n        !imageUrl ||\n        !tipoVeiculo ||\n        !assentos ||\n        !marcha\n      ) {\n        alert(\"Preencha todos os campos\");\n        return;\n      } else if (carroParceiro === \"on\" && cpfParceiro) {\n        const response = await Api.post(\"/automobile\", {\n          marca,\n          modelo,\n          status,\n          cor,\n          valorLocacao,\n          carroParceiro: true,\n          cpfParceiro,\n          filial,\n          imageUrl,\n          tipoVeiculo,\n          assentos,\n          marcha,\n        });\n        history.push(\"/FeedbackVehicle\");\n\n        console.log(response);\n      } else if (carroParceiro === \"\" && !cpfParceiro) {\n        const response = await Api.post(\"/automobile\", {\n          marca,\n          modelo,\n          status,\n          cor,\n          valorLocacao,\n          carroParceiro: false,\n          cpfParceiro: 0,\n          filial,\n          imageUrl,\n          tipoVeiculo,\n          assentos,\n          marcha,\n        });\n        history.push(\"/FeedbackVehicle\");\n        console.log(response);\n      }\n    } catch (err) {\n      alert(\"Ocorreu algum erro ao adicionar o veiculo\");\n    }\n  };\n  return (\n    <Section>\n      <NavBar />\n      <VehicleTypeCard style={{ padding: \"30px\" }}>\n        <Title>\n          <MdDirectionsBike className=\"title-icon\" size={\"1.3em\"} />\n          Bicicletacicleta\n        </Title>\n        <Column1>\n          <div>\n            <Subtitle>Dados do veículo</Subtitle>\n            <div className=\"three-inputs\">\n              <Select\n                options={optionsMarcaBicicleta}\n                name=\"bicicleta_marca\"\n                placeholder=\"Marca\"\n                onChange={(e) => setBicicletaMarca(e.value)}\n              />\n              <Select\n                options={optionsModeloBicicleta}\n                name=\"bicicleta_modelo\"\n                placeholder=\"Modelo\"\n                onChange={(e) => setBicicletaModelo(e.value)}\n              />\n              <Select\n                options={optionsMarcha}\n                name=\"bicicleta_marcha\"\n                placeholder=\"Possui Marcha\"\n                onChange={(e) => setMarcha(e.value)}\n              />\n            </div>\n            <div className=\"three-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bicicleta_cor\"\n                placeholder=\"Cor\"\n                onChange={(e) => setBicicletaCor(e.target.value)}\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bicicleta_aro\"\n                placeholder=\"Aro\"\n                onChange={(e) => setTipoAro(e.target.value)}\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"bicicleta_Assentos\"\n                type=\"text\"\n                placeholder=\"Nº de Assentos\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setBicicletaAssentos(e.target.value)}\n              />\n            </div>\n            <div className=\"three-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bicicleta_status\"\n                placeholder=\"Status\"\n                onChange={(e) => setBicicletaStatus(\"Em análise\")}\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bicicleta_imageUrl\"\n                placeholder=\"ImagemUrl\"\n                onChange={(e) => setBicicletaImagemUrl(e.target.value)}\n              />\n            </div>\n            <div className=\"input-wrapper\">\n              <label htmlFor=\"input-file\">Selecionar um arquivo</label>\n              <input id=\"input-file\" type=\"file\" value=\"\" />\n              <span id=\"file-name\"></span>\n            </div>\n            {/* <div>\n              <label className=\"form-label\">Fotos do veículo</label>\n              <input type=\"file\" accept=\"image/*\" />\n            </div> */}\n          </div>\n        </Column1>\n        <Column2>\n          <div>\n            <br />\n            <br />\n            <br />\n            <div className=\"one-input\" style={{ whiteSpace: \"nowrap\" }}>\n              <Subtitle>\n                <label>\n                  <input\n                    onChange={(e) => setCarroParceiro(e.target.value)}\n                    type=\"checkbox\"\n                    name=\"Customer\"\n                  />\n                  &nbsp;&nbsp;&nbsp; Bicicleta de cliente parceiro?\n                </label>\n              </Subtitle>\n              <Input\n                id=\"standard-basic\"\n                type=\"text\"\n                name=\"bicicleta_cpfParceiro\"\n                placeholder=\"CPF Parceiro\"\n                onChange={(e) => setBicicletaCpfParceiro(e.target.value)}\n              />\n            </div>\n            <Subtitle>Dados para locação</Subtitle>\n            <div className=\"two-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bicicleta_diaria\"\n                placeholder=\"Valor da diária\"\n                onChange={(e) => setBicicletaDiaria(e.target.value)}\n              />\n              <Select\n                options={optionsFilial}\n                name=\"bicicleta_filial\"\n                placeholder=\"Filial de origem\"\n                onChange={(e) => setBicicletaFilial(e.value)}\n              />\n            </div>\n            <br />\n            <br />\n          </div>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Button onClick={handleSubmitBicicleta} type=\"submit\">\n              CADASTRAR\n            </Button>\n          </div>\n        </Column2>\n      </VehicleTypeCard>\n    </Section>\n  );\n};\n\nexport default BicicletaRegistration;","/Volumes/SSD/Dev/web/src/pages/Dashboard/MotoRegistration/index.tsx",["208","209","210"],"import React, { useState } from \"react\";\nimport Select from \"react-select\";\n\nimport {\n  Section,\n  Title,\n  Subtitle,\n  Column1,\n  Column2,\n  Input,\n  Button,\n  VehicleTypeCard,\n} from \"./styles\";\n\nimport NavBar from \"../../../components/NavBar\";\n\nimport { FaMotorcycle } from \"react-icons/fa\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport Api from \"../../../services/api\";\n\nconst MotoRegistration: React.FC = () => {\n  const [marca, setMotoMarca] = useState(\"\");\n  const [modelo, setMotoModelo] = useState(\"\");\n  const [potencia, setMotoPotencia] = useState(\"\");\n  const [status, setMotoStatus] = useState(\"Em análise\");\n  const [placa, setMotoPlaca] = useState(\"\");\n  const [cor, setMotoCor] = useState(\"\");\n  const [ano, setMotoAno] = useState(\"\");\n  const [tipoVeiculo, setMotoTipo] = useState(\"Bicicleta\");\n  const [quilometragem, setMotoQuilometragem] = useState(\"\");\n  const [renavan, setMotoRenavam] = useState(\"\");\n  const [chassi, setMotoChassi] = useState(\"\");\n  const [assentos, setMotoAssentos] = useState(\"\");\n  const [valorLocacao, setMotoDiaria] = useState(\"\");\n  const [carroParceiro, setCarroParceiro] = useState(\"\");\n  const [cpfParceiro, setMotoCpfParceiro] = useState(\"\");\n  const [filial, setMotoFilial] = useState(\"\");\n  const [imageUrl, setMotoImagemUrl] = useState(\"\");\n  const [cilindradas, setMotoCilindradas] = useState(\"\");\n  const [tipoCombustivel, setMotoCombustivel] = useState(\"\");\n\n  const history = useHistory();\n\n  const optionsMarcaMoto = [\n    { value: \"Honda\", label: \"Honda\" },\n    { value: \"Yamaha\", label: \"Yamaha\" },\n    { value: \"BMW\", label: \"BMW\" },\n    { value: \"Ford\", label: \"Ford\" },\n    { value: \"Honda\", label: \"Honda\" },\n    { value: \"Suzuki\", label: \"Suzuki\" },\n  ];\n\n  const optionsStatus = [\n    { value: \"Locado\", label: \"Locado\" },\n    { value: \"Disponível\", label: \"Disponível\" },\n    { value: \"Em manutanção\", label: \"Em manutanção\" },\n    { value: \"Em análise\", label: \"Em análise\" },\n  ];\n\n  const optionsTipo = [\n    { value: 4, label: \"Bicicleta\" },\n    { value: 1, label: \"Carro\" },\n    { value: 3, label: \"Moto\" },\n    { value: 2, label: \"Ônibus\" },\n  ];\n\n  const optionsFilial = [\n    { value: 1, label: \"Unidade Alegrete\" },\n    { value: 3, label: \"Unidade Porto Alegre\" },\n    { value: 2, label: \"Unidade São Borja\" },\n    { value: 4, label: \"Unidade Uruguaiana\" },\n  ];\n\n  const optionsModeloMoto = [\n    { value: \"Biz 100\", label: \"Biz 100\" },\n    { value: \"Biz 125\", label: \"Biz 125\" },\n    { value: \"CG 125\", label: \"CG 125\" },\n    { value: \"CG 150\", label: \"CG 150\" },\n    { value: \"YBR 125\", label: \"YBR 125\" },\n    { value: \"NXR 150\", label: \"NXR 150\" },\n    { value: \"CB 300\", label: \"CB 300\" },\n    { value: \"XRE 300\", label: \"XRE 300\" },\n    { value: \"Fazer 250\", label: \"Fazer 250\" },\n    { value: \"Crypton\", label: \"Crypton\" },\n    { value: \"Lead 110\", label: \"Lead 110\" },\n    { value: \"XTZ 125\", label: \"XTZ 125\" },\n    { value: \"XTZ 250\", label: \"XTZ 250\" },\n    { value: \"Intruder 125\", label: \"Intruder 125\" },\n    { value: \"Burgman 125\", label: \"Burgman 125\" },\n    { value: \"Lander\", label: \"Lander\" },\n  ];\n\n  const optionsPotencia = [\n    { value: \"6.43 CV\", label: \"6.43 CV\" },\n    { value: \"9.2 CV\", label: \"9.2 CV\" },\n    { value: \"77 CV\", label: \"77 CV\" },\n    { value: \"78 CV\", label: \"78 CV\" },\n    { value: \"80 CV\", label: \"80 CV\" },\n    { value: \"82 CV\", label: \"82 CV\" },\n    { value: \"84 CV\", label: \"84 CV\" },\n    { value: \"85 CV\", label: \"85 CV\" },\n    { value: \"88 CV\", label: \"88 CV\" },\n  ];\n\n  const optionsAno = [\n    { value: 1990, label: 1990 },\n    { value: 1991, label: 1991 },\n    { value: 1992, label: 1992 },\n    { value: 1993, label: 1993 },\n    { value: 1994, label: 1994 },\n    { value: 1995, label: 1995 },\n    { value: 1996, label: 1996 },\n    { value: 1997, label: 1997 },\n    { value: 1998, label: 1998 },\n    { value: 1999, label: 1999 },\n    { value: 2000, label: 2000 },\n    { value: 2001, label: 2001 },\n    { value: 2002, label: 2002 },\n    { value: 2003, label: 2003 },\n    { value: 2004, label: 2004 },\n    { value: 2005, label: 2005 },\n    { value: 2006, label: 2006 },\n    { value: 2007, label: 2007 },\n    { value: 2008, label: 2008 },\n    { value: 2009, label: 2009 },\n    { value: 2010, label: 2010 },\n    { value: 2011, label: 2011 },\n    { value: 2012, label: 2012 },\n    { value: 2013, label: 2013 },\n    { value: 2014, label: 2014 },\n    { value: 2015, label: 2015 },\n    { value: 2016, label: 2016 },\n    { value: 2017, label: 2017 },\n    { value: 2018, label: 2018 },\n    { value: 2019, label: 2019 },\n    { value: 2020, label: 2020 },\n    { value: 2021, label: 2021 },\n  ];\n\n  const optionsCombustivel = [\n    { value: 2, label: \"Etanol\" },\n    { value: 4, label: \"Gasolina\" },\n  ];\n\n  const optionsCilindradas = [\n    { value: \"1.0\", label: \"1.0\" },\n    { value: \"1.2\", label: \"1.2\" },\n    { value: \"1.3\", label: \"1.3\" },\n    { value: \"1.4\", label: \"1.4\" },\n    { value: \"1.5\", label: \"1.5\" },\n    { value: \"1.6\", label: \"1.6\" },\n    { value: \"1.8\", label: \"1.8\" },\n    { value: \"2.0\", label: \"2.0\" },\n    { value: \"2.2\", label: \"2.2\" },\n    { value: \"2.3\", label: \"2.3\" },\n    { value: \"2.4\", label: \"2.4\" },\n    { value: \"2.5\", label: \"2.5\" },\n    { value: \"2.7\", label: \"2.7\" },\n    { value: \"2.8\", label: \"2.8\" },\n    { value: \"3.0\", label: \"3.0\" },\n    { value: \"3.2\", label: \"3.2\" },\n    { value: \"3.3\", label: \"3.3\" },\n    { value: \"3.5\", label: \"3.5\" },\n    { value: \"3.7\", label: \"3.7\" },\n    { value: \"3.8\", label: \"3.8\" },\n    { value: \"4.0\", label: \"4.0\" },\n  ];\n\n  const handleSubmitMoto = async (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n\n    console.log(marca);\n    console.log(modelo);\n    console.log(status);\n    console.log(potencia);\n    console.log(placa);\n    console.log(cor);\n    console.log(ano);\n    console.log(tipoCombustivel);\n    console.log(quilometragem);\n    console.log(renavan);\n    console.log(chassi);\n    console.log(valorLocacao);\n    console.log(carroParceiro);\n    console.log(cpfParceiro);\n    console.log(filial);\n    console.log(imageUrl);\n    console.log(cilindradas);\n    console.log(tipoVeiculo);\n    console.log(assentos);\n\n    try {\n      if (\n        !modelo ||\n        !status ||\n        !potencia ||\n        !placa ||\n        !cor ||\n        !ano ||\n        !tipoCombustivel ||\n        !quilometragem ||\n        !renavan ||\n        !chassi ||\n        !valorLocacao ||\n        !cilindradas ||\n        !filial ||\n        !imageUrl ||\n        !tipoVeiculo ||\n        !assentos\n      ) {\n        alert(\"Preencha todos os campos\");\n        return;\n      } else if (carroParceiro === \"on\" && cpfParceiro) {\n        const response = await Api.post(\"/automobile\", {\n          marca,\n          modelo,\n          status,\n          potencia,\n          placa,\n          cor,\n          ano,\n          tipoCombustivel,\n          quilometragem,\n          renavan,\n          chassi,\n          valorLocacao,\n          carroParceiro: true,\n          cpfParceiro,\n          cilindradas,\n          filial,\n          imageUrl,\n          tipoVeiculo,\n          assentos,\n        });\n        history.push(\"/FeedbackVehicle\");\n\n        console.log(response);\n      } else if (carroParceiro === \"\" && !cpfParceiro) {\n        const response = await Api.post(\"/automobile\", {\n          marca,\n          modelo,\n          status,\n          potencia,\n          placa,\n          cor,\n          ano,\n          tipoCombustivel,\n          quilometragem,\n          renavan,\n          chassi,\n          valorLocacao,\n          carroParceiro: false,\n          cpfParceiro: 0,\n          cilindradas,\n          filial,\n          imageUrl,\n          tipoVeiculo,\n          assentos,\n        });\n        history.push(\"/FeedbackVehicle\");\n        console.log(response);\n      }\n    } catch (err) {\n      alert(\"Ocorreu algum erro ao adicionar o veiculo\");\n    }\n  };\n  return (\n    <Section>\n      <NavBar />\n      <VehicleTypeCard style={{ padding: \"30px\" }}>\n        <Title>\n          <FaMotorcycle className=\"title-icon\" size={\"1.3em\"} />\n          Motocicleta\n        </Title>\n        <Column1>\n          <div>\n            <Subtitle>Dados do veículo</Subtitle>\n            <div className=\"three-inputs\">\n              <Select\n                options={optionsMarcaMoto}\n                name=\"moto_marca\"\n                placeholder=\"Marca\"\n                onChange={(e) => setMotoMarca(e.value)}\n              />\n              <Select\n                options={optionsModeloMoto}\n                name=\"moto_modelo\"\n                placeholder=\"Modelo\"\n                onChange={(e) => setMotoModelo(e.value)}\n              />\n              <Select\n                options={optionsCombustivel}\n                name=\"moto_tipoCombustivel\"\n                placeholder=\"Tipo de Combustível\"\n                onChange={(e) => setMotoCombustivel(e.value)}\n              />\n              <Select\n                options={optionsAno}\n                name=\"moto_ano\"\n                placeholder=\"Ano\"\n                onChange={(e) => setMotoAno(e.value)}\n              />\n              <Select\n                options={optionsCilindradas}\n                name=\"moto_cilindradas\"\n                placeholder=\"Cilindradas\"\n                onChange={(e) => setMotoCilindradas(e.value)}\n              />\n              <Select\n                options={optionsPotencia}\n                name=\"moto_potencia\"\n                placeholder=\"Potencia\"\n                onChange={(e) => setMotoPotencia(e.value)}\n              />\n            </div>\n            <div className=\"three-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"moto_cor\"\n                placeholder=\"Cor\"\n                onChange={(e) => setMotoCor(e.target.value)}\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"moto_Quilometragem\"\n                type=\"text\"\n                placeholder=\"Quilometragem\"\n                onChange={(e) => setMotoQuilometragem(e.target.value)}\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"moto_placa\"\n                type=\"text\"\n                placeholder=\"Placa\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setMotoPlaca(e.target.value)}\n              />\n            </div>\n            <div className=\"two-inputs\">\n              <Input\n                id=\"standard-basic\"\n                name=\"moto_renavam\"\n                type=\"text\"\n                placeholder=\"Renavam\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setMotoRenavam(e.target.value)}\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"moto_chassi\"\n                placeholder=\"Chassi\"\n                onChange={(e) => setMotoChassi(e.target.value)}\n              />\n            </div>\n            <div className=\"three-inputs\">\n              <Input\n                id=\"standard-basic\"\n                name=\"moto_Assentos\"\n                type=\"text\"\n                placeholder=\"Nº de Assentos\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setMotoAssentos(e.target.value)}\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"moto_status\"\n                placeholder=\"Status\"\n                onChange={(e) => setMotoStatus(\"Em análise\")}\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"moto_imageUrl\"\n                placeholder=\"ImagemUrl\"\n                onChange={(e) => setMotoImagemUrl(e.target.value)}\n              />\n            </div>\n            <div className=\"input-wrapper\">\n              <label htmlFor=\"input-file\">Selecionar um arquivo</label>\n              <input id=\"input-file\" type=\"file\" value=\"\" />\n              <span id=\"file-name\"></span>\n            </div>\n            {/* <div>\n              <label className=\"form-label\">Fotos do veículo</label>\n              <input type=\"file\" accept=\"image/*\" />\n            </div> */}\n          </div>\n        </Column1>\n        <Column2>\n          <div>\n            <br />\n            <br />\n            <br />\n            <div className=\"one-input\" style={{ whiteSpace: \"nowrap\" }}>\n              <Subtitle>\n                <label>\n                  <input\n                    onChange={(e) => setCarroParceiro(e.target.value)}\n                    type=\"checkbox\"\n                    name=\"Customer\"\n                  />\n                  &nbsp;&nbsp;&nbsp; Veículo de cliente parceiro?\n                </label>\n              </Subtitle>\n              <Input\n                id=\"standard-basic\"\n                type=\"text\"\n                name=\"moto_cpfParceiro\"\n                placeholder=\"CPF Parceiro\"\n                onChange={(e) => setMotoCpfParceiro(e.target.value)}\n              />\n            </div>\n            <Subtitle>Dados para locação</Subtitle>\n            <div className=\"two-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"moto_diaria\"\n                placeholder=\"Valor da diária\"\n                onChange={(e) => setMotoDiaria(e.target.value)}\n              />\n              <Select\n                options={optionsFilial}\n                name=\"moto_filial\"\n                placeholder=\"Filial de origem\"\n                onChange={(e) => setMotoFilial(e.value)}\n              />\n            </div>\n            <br />\n            <br />\n          </div>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Button onClick={handleSubmitMoto} type=\"submit\">\n              CADASTRAR\n            </Button>\n          </div>\n        </Column2>\n      </VehicleTypeCard>\n    </Section>\n  );\n};\n\nexport default MotoRegistration;\n","/Volumes/SSD/Dev/web/src/pages/Dashboard/BusRegistration/index.tsx",["211","212","213","214"],"import React, { useState } from \"react\";\nimport Select from \"react-select\";\n\nimport {\n  Section,\n  Title,\n  Subtitle,\n  Column1,\n  Column2,\n  Input,\n  Button,\n  VehicleTypeCard,\n} from \"./styles\";\n\nimport NavBar from \"../../../components/NavBar\";\n\nimport { MdDirectionsBus } from \"react-icons/md\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport Api from \"../../../services/api\";\n\nconst BusRegistration: React.FC = () => {\n  const [marca, setBusMarca] = useState(\"\");\n  const [modelo, setBusModelo] = useState(\"\");\n  const [potencia, setBusPotencia] = useState(\"\");\n  const [status, setBusStatus] = useState(\"Em análise\");\n  const [placa, setBusPlaca] = useState(\"\");\n  const [cor, setBusCor] = useState(\"\");\n  const [ano, setBusAno] = useState(\"\");\n  const [tipoVeiculo, setBusTipo] = useState(\"Ônibus\");\n  const [numeroPortas, setBusPortas] = useState(\"\");\n  const [quilometragem, setBusQuilometragem] = useState(\"\");\n  const [renavan, setBusRenavam] = useState(\"\");\n  const [chassi, setBusChassi] = useState(\"\");\n  const [assentos, setBusAssentos] = useState(\"\");\n  const [valorLocacao, setBusDiaria] = useState(\"\");\n  const [carroParceiro, setCarroParceiro] = useState(\"\");\n  const [cpfParceiro, setBusCpfParceiro] = useState(\"\");\n  const [filial, setBusFilial] = useState(\"\");\n  const [imageUrl, setBusImagemUrl] = useState(\"\");\n  const [cilindradas, setBusCilindradas] = useState(\"\");\n  const [portaMalas, setBusPortaMalas] = useState(\"\");\n  const [tipoCombustivel, setVehicleCombustivel] = useState(\"\");\n\n  const history = useHistory();\n\n  const optionsMarcaBus = [\n    { value: \"Iveco\", label: \"Iveco\" },\n    { value: \"Volvo\", label: \"Volvo\" },\n    { value: \"Agrale\", label: \"Agrale\" },\n    { value: \"Scania\", label: \"Scania\" },\n    { value: \"Jimbei\", label: \"Jimbei\" },\n    { value: \"Mercedes-Benz\", label: \"Mercedes-Benz\" },\n    { value: \"Vokswagen\", label: \"Vokswagen\" },\n  ];\n\n  const optionsStatus = [\n    { value: \"Locado\", label: \"Locado\" },\n    { value: \"Disponível\", label: \"Disponível\" },\n    { value: \"Em manutanção\", label: \"Em manutanção\" },\n    { value: \"Em análise\", label: \"Em análise\" },\n  ];\n\n  const optionsNPortas = [\n    { value: 1, label: \"1\" },\n    { value: 2, label: \"2\" },\n    { value: 3, label: \"3\" },\n    { value: 4, label: \"4\" },\n    { value: 5, label: \"5\" },\n  ];\n\n  const optionsTipo = [\n    { value: 4, label: \"Bicicleta\" },\n    { value: 1, label: \"Carro\" },\n    { value: 3, label: \"Moto\" },\n    { value: 2, label: \"Ônibus\" },\n  ];\n\n  const optionsFilial = [\n    { value: 1, label: \"Unidade Alegrete\" },\n    { value: 3, label: \"Unidade Porto Alegre\" },\n    { value: 2, label: \"Unidade São Borja\" },\n    { value: 4, label: \"Unidade Uruguaiana\" },\n  ];\n\n  const optionsModeloCarro = [\n    { value: \"Sprinter\", label: \"Sprinter\" },\n    { value: \"Volare W9\", label: \"Volare W9\" }, \n    { value: \"Volare W8\", label: \"Volare W8\" }, \n    { value: \"Volare DW9\", label: \"Volare DW9\" }, \n    { value: \"Volare V8\", label: \"Volare V8\" }, \n    { value: \"Volare V6\", label: \"Volare V6\" }, \n    { value: \"Masca Gran Midi\", label: \"Masca Gran Midi\" }, \n    { value: \"Masca Granvia\", label: \"Masca Granvia\" }, \n    { value: \"Comil Campione\", label: \"Comil Campione\" }, \n    { value: \"Comil Versatile\", label: \"Comil Versatile\" }, \n    { value: \"Masca Granvia\", label: \"Masca Granvia\" },\n    { value: \"Masca Gran Midi\", label: \"Masca Gran Midi\" },\n  ];\n\n  const optionsPotencia = [\n    { value: \"115 CV\", label: \"115 CV\" },\n    { value: \"140 CV\", label: \"140 CV\" },\n    { value: \"146 CV\", label: \"146 CV\" },\n    { value: \"150 CV\", label: \"150 CV\" },\n    { value: \"163\", label: \"163 CV\" },\n\n  ];\n\n  const optionsAno = [\n    { value: 1990, label: 1990 },\n    { value: 1991, label: 1991 },\n    { value: 1992, label: 1992 },\n    { value: 1993, label: 1993 },\n    { value: 1994, label: 1994 },\n    { value: 1995, label: 1995 },\n    { value: 1996, label: 1996 },\n    { value: 1997, label: 1997 },\n    { value: 1998, label: 1998 },\n    { value: 1999, label: 1999 },\n    { value: 2000, label: 2000 },\n    { value: 2001, label: 2001 },\n    { value: 2002, label: 2002 },\n    { value: 2003, label: 2003 },\n    { value: 2004, label: 2004 },\n    { value: 2005, label: 2005 },\n    { value: 2006, label: 2006 },\n    { value: 2007, label: 2007 },\n    { value: 2008, label: 2008 },\n    { value: 2009, label: 2009 },\n    { value: 2010, label: 2010 },\n    { value: 2011, label: 2011 },\n    { value: 2012, label: 2012 },\n    { value: 2013, label: 2013 },\n    { value: 2014, label: 2014 },\n    { value: 2015, label: 2015 },\n    { value: 2016, label: 2016 },\n    { value: 2017, label: 2017 },\n    { value: 2018, label: 2018 },\n    { value: 2019, label: 2019 },\n    { value: 2020, label: 2020 },\n    { value: 2021, label: 2021 },\n  ];\n\n  const optionsCombustivel = [\n    { value: 1, label: \"Diesel\" },\n    { value: 6, label: \"Híbrido/ Elétrico\" },\n  ];\n\n  const optionsPortaMalas = [\n    { value: \"146 Litros\", label: \"146 Litros\" },\n    { value: \"180 Litros\", label: \"180 Litros\" },\n    { value: \"257 Litros\", label: \"257 Litros\" },\n    { value: \"265 Litros\", label: \"265 Litros\" },\n    { value: \"275 Litros\", label: \"275 Litros\" },\n    { value: \"276 Litros\", label: \"276 Litros\" },\n    { value: \"285 Litros\", label: \"285 Litros\" },\n    { value: \"289 Litros\", label: \"289 Litros\" },\n    { value: \"300 Litros\", label: \"300 Litros\" },\n    { value: \"313 Litros\", label: \"313 Litros\" },\n    { value: \"320 Litros\", label: \"320 Litros\" },\n    { value: \"334 Litros\", label: \"334 Litros\" },\n    { value: \"359 Litros\", label: \"359 Litros\" },\n    { value: \"363 Litros\", label: \"363 Litros\" },\n    { value: \"400 Litros\", label: \"400 Litros\" },\n    { value: \"415 Litros\", label: \"415 Litros\" },\n  ];\n\n  const optionsCilindradas = [\n    { value: \"2.1\", label: \"2.1\" },\n    { value: \"2.8\", label: \"2.8\" },\n    { value: \"4.3\", label: \"4.3\" },\n    { value: \"4.8\", label: \"4.8\" },\n  ];\n\n  const handleSubmitBus = async (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n\n    console.log(marca);\n    console.log(modelo);\n    console.log(status);\n    console.log(potencia);\n    console.log(placa);\n    console.log(cor);\n    console.log(ano);\n    console.log(tipoCombustivel);\n    console.log(numeroPortas);\n    console.log(quilometragem);\n    console.log(renavan);\n    console.log(chassi);\n    console.log(valorLocacao);\n    console.log(carroParceiro);\n    console.log(cpfParceiro);\n    console.log(filial);\n    console.log(imageUrl);\n    console.log(cilindradas);\n    console.log(portaMalas);\n    console.log(tipoVeiculo);\n    console.log(assentos);\n\n\n    try {\n      if (\n        !modelo ||\n        !status ||\n        !potencia ||\n        !placa ||\n        !cor ||\n        !ano ||\n        !tipoCombustivel ||\n        !numeroPortas ||\n        !quilometragem ||\n        !renavan ||\n        !chassi ||\n        !valorLocacao ||\n        !cilindradas ||\n        !filial ||\n        !imageUrl ||\n        !portaMalas ||\n        !tipoVeiculo ||\n        !assentos\n      ) {\n        alert(\"Preencha todos os campos\");\n        return;\n      } else if (carroParceiro === \"on\" && cpfParceiro) {\n        const response = await Api.post(\"/automobile\", {\n          marca,\n          modelo,\n          status,\n          potencia,\n          placa,\n          cor,\n          ano,\n          tipoCombustivel,\n          numeroPortas,\n          quilometragem,\n          renavan,\n          chassi,\n          valorLocacao,\n          carroParceiro: true,\n          cpfParceiro,\n          cilindradas,\n          filial,\n          imageUrl,\n          portaMalas,\n          tipoVeiculo,\n          assentos,\n        });\n        history.push(\"/FeedbackVehicle\");\n\n        console.log(response);\n      } else if (carroParceiro === \"\" && !cpfParceiro) {\n        const response = await Api.post(\"/automobile\", {\n          marca,\n          modelo,\n          status,\n          potencia,\n          placa,\n          cor,\n          ano,\n          tipoCombustivel,\n          numeroPortas,\n          quilometragem,\n          renavan,\n          chassi,\n          valorLocacao,\n          carroParceiro: false,\n          cpfParceiro: 0,\n          cilindradas,\n          filial,\n          imageUrl,\n          portaMalas,\n          tipoVeiculo,\n          assentos,\n        });\n        history.push(\"/FeedbackVehicle\");\n        console.log(response);\n      }\n    } catch (err) {\n      alert(\"Ocorreu algum erro ao adicionar o veiculo\");\n    }\n  };\n\n  return (\n    <Section>\n      <NavBar />\n      <VehicleTypeCard style={{ padding: \"30px\" }}>\n        <Title>\n          <MdDirectionsBus className=\"title-icon\" size={\"1.3em\"} />\n          Ônibus\n        </Title>\n        <Column1>\n          <div>\n            <Subtitle>Dados do veículo</Subtitle>\n            <div className=\"three-inputs\">\n              <Select\n                options={optionsMarcaBus}\n                name=\"bus_marca\"\n                placeholder=\"Marca\"\n                onChange={(e) => setBusMarca(e.value)}\n              />\n              <Select\n                options={optionsModeloCarro}\n                name=\"bus_modelo\"\n                placeholder=\"Modelo\"\n                onChange={(e) => setBusModelo(e.value)}\n              />\n              <Select\n                options={optionsCombustivel}\n                name=\"bus_tipoCombustivel\"\n                placeholder=\"Tipo de Combustível\"\n                onChange={(e) => setVehicleCombustivel(e.value)}\n              />\n              <Select\n                options={optionsAno}\n                name=\"bus_ano\"\n                placeholder=\"Ano\"\n                onChange={(e) => setBusAno(e.value)}\n              />\n              <Select\n                options={optionsCilindradas}\n                name=\"bus_cilindradas\"\n                placeholder=\"Cilindradas\"\n                onChange={(e) => setBusCilindradas(e.value)}\n              />\n              <Select\n                options={optionsPotencia}\n                name=\"bus_potencia\"\n                placeholder=\"Potencia\"\n                onChange={(e) => setBusPotencia(e.value)}\n              />\n              <Select\n                options={optionsNPortas}\n                name=\"bus_nPortas\"\n                placeholder=\"Nº de Portas\"\n                onChange={(e) => setBusPortas(e.value)}\n              />\n              <Select\n                options={optionsPortaMalas}\n                name=\"bus_portaMalas\"\n                placeholder=\"Capacidade Porta Malas\"\n                onChange={(e) => setBusPortaMalas(e.value)}\n              />\n            </div>\n            <div className=\"three-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bus_cor\"\n                placeholder=\"Cor\"\n                onChange={(e) => setBusCor(e.target.value)}\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"bus_Quilometragem\"\n                type=\"text\"\n                placeholder=\"Quilometragem\"\n                onChange={(e) => setBusQuilometragem(e.target.value)}\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"bus_placa\"\n                type=\"text\"\n                placeholder=\"Placa\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setBusPlaca(e.target.value)}\n              />\n            </div>\n            <div className=\"two-inputs\">\n              <Input\n                id=\"standard-basic\"\n                name=\"bus_renavam\"\n                type=\"text\"\n                placeholder=\"Renavam\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setBusRenavam(e.target.value)}\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bus_chassi\"\n                placeholder=\"Chassi\"\n                onChange={(e) => setBusChassi(e.target.value)}\n              />\n            </div>\n            <div className=\"three-inputs\">\n              <Input\n                id=\"standard-basic\"\n                name=\"bus_Assentos\"\n                type=\"text\"\n                placeholder=\"Nº de Assentos\"\n                style={{ width: \"100%\" }}\n                onChange={(e) => setBusAssentos(e.target.value)}\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bus_status\"\n                placeholder=\"Status: Em análise\"\n                disabled\n              />\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bus_imageUrl\"\n                placeholder=\"ImagemUrl\"\n                onChange={(e) => setBusImagemUrl(e.target.value)}\n              />\n            </div>\n          </div>\n        </Column1>\n        <Column2>\n          <div>\n            <br />\n            <br />\n            <br />\n            <div className=\"one-input\" style={{ whiteSpace: \"nowrap\" }}>\n              <Subtitle>\n                <label>\n                  <input\n                    onChange={(e) => setCarroParceiro(e.target.value)}\n                    type=\"checkbox\"\n                    name=\"Customer\"\n                  />\n                  &nbsp;&nbsp;&nbsp; Veículo de cliente parceiro?\n                </label>\n              </Subtitle>\n              <Input\n                id=\"standard-basic\"\n                type=\"text\"\n                name=\"bus_cpfParceiro\"\n                placeholder=\"CPF Parceiro\"\n                onChange={(e) => setBusCpfParceiro(e.target.value)}\n              />\n            </div>\n            <Subtitle>Dados para locação</Subtitle>\n            <div className=\"two-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"bus_diaria\"\n                placeholder=\"Valor da diária\"\n                onChange={(e) => setBusDiaria(e.target.value)}\n              />\n              <Select\n                options={optionsFilial}\n                name=\"bus_filial\"\n                placeholder=\"Filial de origem\"\n                onChange={(e) => setBusFilial(e.value)}\n              />\n            </div>\n            <br />\n            <br />\n          </div>\n          <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Button onClick={handleSubmitBus} type=\"submit\">\n              CADASTRAR\n            </Button>\n          </div>\n        </Column2>\n      </VehicleTypeCard>\n    </Section>\n  );\n};\n\nexport default BusRegistration;\n","/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehiclesOptions/index.jsx",[],"/Volumes/SSD/Dev/web/src/components/NavBar/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/MotoRegistration/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/BusRegistration/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/BicicletaRegistration/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Vehicles/VehicleRegistration/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Users/UsersEdit/index.tsx",["215","216","217"],"import React, { useState } from \"react\";\nimport { MdPerson } from \"react-icons/md\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Section,\n  Card,\n  Title,\n  Subtitle,\n  Column1,\n  Column2,\n  Input,\n  Button,\n} from \"./styles\";\n\nimport NavBar from \"../../../../components/NavBar\";\n\nimport Api from \"../../../../services/api\";\n\nfunction UsersEdit(users) {\n  console.log(users);\n  const history = useHistory();\n\n  const [nome, setClientName] = useState(\"\");\n  const [dataNascimento, setClientBirthDate] = useState(\"\");\n  const [cpf, setClientCpf] = useState(\"\");\n  const [telefone, setClientPhone] = useState(\"\");\n  const [cnh, setClientCnh] = useState(\"\");\n  const [rg, setClientRg] = useState(\"\");\n  const [email, setClientEmail] = useState(\"\");\n  const [numeroPis, setEmployerNumeroPis] = useState(\"\");\n\n  const handleSubmitClients = async (e) => {\n    e.preventDefault();\n\n    try {\n      if (!nome || !dataNascimento || !cpf || !telefone || !email) {\n        alert(\"Preencha todos os campos\");\n        return;\n      } else if (rg && cnh) {\n        const responsePartner = await Api.post(\"/partner\", {\n          cpf,\n          nome,\n          telefone,\n          dataNascimento,\n          email,\n          cnh,\n          rg,\n        });\n        history.push(\"/FeedbackClient\");\n      } else if (!rg && cnh && !numeroPis) {\n        const responseClient = await Api.post(\"/client\", {\n          cpf,\n          nome,\n          telefone,\n          dataNascimento,\n          email,\n          cnh,\n        });\n        history.push(\"/FeedbackClient\");\n      } else if (numeroPis) {\n        const responseEmployer = await Api.post(\"/employer\", {\n          cpf,\n          nome,\n          telefone,\n          dataNascimento,\n          email,\n          numeroPis,\n        });\n        history.push(\"/FeedbackClient\");\n      }\n    } catch (err) {\n      alert(\"Ocorreu algum erro ao adicionar o cliente\");\n    }\n  };\n\n  return (\n    <Section>\n\n    <NavBar />\n    <Card>\n      <Title>\n        <MdPerson className=\"title-icon\" size={\"1.3em\"} />\n        Usuários\n      </Title>\n      <Column1>\n        <form>\n          <div>\n            <Subtitle>Dados do usuário</Subtitle>\n            <div className=\"one-input\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"client_name\"\n                onChange={(e) => setClientName(e.target.value)}\n                placeholder=\"Nome completo\"\n                style={{\n                  width: \"100%\",\n                }}\n              />\n            </div>\n            <div className=\"two-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"client_birthDate\"\n                placeholder=\"Data de nascimento\"\n                onChange={(e) => setClientBirthDate(e.target.value)}\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"client_telephone\"\n                type=\"text\"\n                onChange={(e) => setClientPhone(e.target.value)}\n                placeholder=\"Telefone\"\n              />\n            </div>\n            <div className=\"one-input\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"client_email\"\n                onChange={(e) => setClientEmail(e.target.value)}\n                placeholder=\"Email\"\n                style={{\n                  width: \"100%\",\n                }}\n              />\n            </div>\n          </div>\n          <br />\n          <div style={{ whiteSpace: \"nowrap\" }}>\n            <Subtitle>Documentos</Subtitle>\n            <div className=\"two-inputs\">\n              <Input\n                type=\"text\"\n                id=\"standard-basic\"\n                name=\"client_cpf\"\n                onChange={(e) => setClientCpf(e.target.value)}\n                placeholder=\"CPF\"\n              />\n              <Input\n                id=\"standard-basic\"\n                name=\"client_cnh\"\n                type=\"text\"\n                onChange={(e) => setClientCnh(e.target.value)}\n                placeholder=\"CNH\"\n              />\n            </div>\n          </div>\n        </form>\n      </Column1>\n      <Column2>\n        <div>\n          <Subtitle>\n            <label>\n              <input type=\"checkbox\" name=\"Customer\" />\n            </label>\n            &nbsp;&nbsp;&nbsp; Cliente parceiro ?\n          </Subtitle>\n          <Input\n            id=\"standard-basic\"\n            name=\"client_rg\"\n            type=\"text\"\n            onChange={(e) => setClientRg(e.target.value)}\n            placeholder=\"RG\"\n          />\n          <br />\n          <br />\n          <Subtitle>\n            <label>\n              <input type=\"checkbox\" name=\"Customer\" />\n            </label>\n            &nbsp;&nbsp;&nbsp; Funcionário ?\n          </Subtitle>\n          <Input\n            id=\"standard-basic\"\n            name=\"employer_numeroPis\"\n            type=\"text\"\n            onChange={(e) => setEmployerNumeroPis(e.target.value)}\n            placeholder=\"Número Pis\"\n          />\n        </div>\n        <Button onClick={handleSubmitClients} type=\"submit\">\n          CADASTRAR\n        </Button>\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}></div>\n      </Column2>\n    </Card>\n    </Section>\n  );\n};\n\nexport default UsersEdit;\n","/Volumes/SSD/Dev/web/src/pages/Dashboard/Reservations/ReservationList/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Locations/AddLocation/styles.tsx",[],"/Volumes/SSD/Dev/web/src/pages/Dashboard/Locations/AddLocation/index.jsx",["218","219","220","221","222","223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":12,"column":10,"nodeType":"231","messageId":"232","endLine":12,"endColumn":15},{"ruleId":"225","replacedBy":"233"},{"ruleId":"227","replacedBy":"234"},{"ruleId":"229","severity":1,"message":"235","line":3,"column":5,"nodeType":"231","messageId":"232","endLine":3,"endColumn":14},{"ruleId":"229","severity":1,"message":"236","line":5,"column":5,"nodeType":"231","messageId":"232","endLine":5,"endColumn":9},{"ruleId":"229","severity":1,"message":"237","line":8,"column":5,"nodeType":"231","messageId":"232","endLine":8,"endColumn":12},{"ruleId":"229","severity":1,"message":"238","line":9,"column":5,"nodeType":"231","messageId":"232","endLine":9,"endColumn":12},{"ruleId":"229","severity":1,"message":"239","line":10,"column":5,"nodeType":"231","messageId":"232","endLine":10,"endColumn":10},{"ruleId":"229","severity":1,"message":"240","line":11,"column":5,"nodeType":"231","messageId":"232","endLine":11,"endColumn":11},{"ruleId":"229","severity":1,"message":"241","line":13,"column":5,"nodeType":"231","messageId":"232","endLine":13,"endColumn":20},{"ruleId":"229","severity":1,"message":"242","line":18,"column":10,"nodeType":"231","messageId":"232","endLine":18,"endColumn":18},{"ruleId":"229","severity":1,"message":"243","line":18,"column":20,"nodeType":"231","messageId":"232","endLine":18,"endColumn":35},{"ruleId":"229","severity":1,"message":"244","line":18,"column":37,"nodeType":"231","messageId":"232","endLine":18,"endColumn":53},{"ruleId":"229","severity":1,"message":"245","line":19,"column":10,"nodeType":"231","messageId":"232","endLine":19,"endColumn":17},{"ruleId":"229","severity":1,"message":"246","line":20,"column":10,"nodeType":"231","messageId":"232","endLine":20,"endColumn":22},{"ruleId":"229","severity":1,"message":"247","line":24,"column":8,"nodeType":"231","messageId":"232","endLine":24,"endColumn":11},{"ruleId":"225","replacedBy":"248"},{"ruleId":"227","replacedBy":"249"},{"ruleId":"229","severity":1,"message":"250","line":40,"column":15,"nodeType":"231","messageId":"232","endLine":40,"endColumn":30},{"ruleId":"229","severity":1,"message":"251","line":51,"column":15,"nodeType":"231","messageId":"232","endLine":51,"endColumn":29},{"ruleId":"229","severity":1,"message":"252","line":61,"column":15,"nodeType":"231","messageId":"232","endLine":61,"endColumn":31},{"ruleId":"225","replacedBy":"253"},{"ruleId":"227","replacedBy":"254"},{"ruleId":"225","replacedBy":"248"},{"ruleId":"227","replacedBy":"249"},{"ruleId":"225","replacedBy":"233"},{"ruleId":"227","replacedBy":"234"},{"ruleId":"255","severity":1,"message":"256","line":37,"column":12,"nodeType":"231","messageId":"232","endLine":37,"endColumn":20},{"ruleId":"229","severity":1,"message":"257","line":26,"column":18,"nodeType":"231","messageId":"232","endLine":26,"endColumn":34},{"ruleId":"229","severity":1,"message":"258","line":30,"column":23,"nodeType":"231","messageId":"232","endLine":30,"endColumn":37},{"ruleId":"229","severity":1,"message":"259","line":63,"column":9,"nodeType":"231","messageId":"232","endLine":63,"endColumn":22},{"ruleId":"229","severity":1,"message":"260","line":75,"column":9,"nodeType":"231","messageId":"232","endLine":75,"endColumn":20},{"ruleId":"229","severity":1,"message":"261","line":322,"column":15,"nodeType":"231","messageId":"232","endLine":322,"endColumn":23},{"ruleId":"229","severity":1,"message":"261","line":347,"column":15,"nodeType":"231","messageId":"232","endLine":347,"endColumn":23},{"ruleId":"229","severity":1,"message":"262","line":27,"column":23,"nodeType":"231","messageId":"232","endLine":27,"endColumn":39},{"ruleId":"229","severity":1,"message":"263","line":34,"column":10,"nodeType":"231","messageId":"232","endLine":34,"endColumn":17},{"ruleId":"229","severity":1,"message":"259","line":48,"column":9,"nodeType":"231","messageId":"232","endLine":48,"endColumn":22},{"ruleId":"229","severity":1,"message":"260","line":55,"column":9,"nodeType":"231","messageId":"232","endLine":55,"endColumn":20},{"ruleId":"229","severity":1,"message":"264","line":31,"column":23,"nodeType":"231","messageId":"232","endLine":31,"endColumn":34},{"ruleId":"229","severity":1,"message":"259","line":55,"column":9,"nodeType":"231","messageId":"232","endLine":55,"endColumn":22},{"ruleId":"229","severity":1,"message":"260","line":62,"column":9,"nodeType":"231","messageId":"232","endLine":62,"endColumn":20},{"ruleId":"229","severity":1,"message":"265","line":27,"column":18,"nodeType":"231","messageId":"232","endLine":27,"endColumn":30},{"ruleId":"229","severity":1,"message":"266","line":31,"column":23,"nodeType":"231","messageId":"232","endLine":31,"endColumn":33},{"ruleId":"229","severity":1,"message":"259","line":58,"column":9,"nodeType":"231","messageId":"232","endLine":58,"endColumn":22},{"ruleId":"229","severity":1,"message":"260","line":73,"column":9,"nodeType":"231","messageId":"232","endLine":73,"endColumn":20},{"ruleId":"229","severity":1,"message":"250","line":41,"column":15,"nodeType":"231","messageId":"232","endLine":41,"endColumn":30},{"ruleId":"229","severity":1,"message":"251","line":52,"column":15,"nodeType":"231","messageId":"232","endLine":52,"endColumn":29},{"ruleId":"229","severity":1,"message":"252","line":62,"column":15,"nodeType":"231","messageId":"232","endLine":62,"endColumn":31},{"ruleId":"255","severity":1,"message":"267","line":1,"column":27,"nodeType":"231","messageId":"232","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"268","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":14},{"ruleId":"255","severity":1,"message":"269","line":21,"column":8,"nodeType":"231","messageId":"232","endLine":21,"endColumn":11},{"ruleId":"255","severity":1,"message":"270","line":24,"column":9,"nodeType":"231","messageId":"232","endLine":24,"endColumn":16},{"ruleId":"255","severity":1,"message":"271","line":36,"column":24,"nodeType":"231","messageId":"232","endLine":36,"endColumn":38},{"ruleId":"255","severity":1,"message":"272","line":50,"column":12,"nodeType":"231","messageId":"232","endLine":50,"endColumn":37},{"ruleId":"255","severity":1,"message":"273","line":88,"column":15,"nodeType":"231","messageId":"232","endLine":88,"endColumn":31},"no-native-reassign",["274"],"no-negated-in-lhs",["275"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["274"],["275"],"'Container' is defined but never used.","'Card' is defined but never used.","'Column1' is defined but never used.","'Column2' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'VehicleTypeCard' is defined but never used.","'MdPerson' is defined but never used.","'MdDirectionsBus' is defined but never used.","'MdDirectionsBike' is defined but never used.","'IoMdCar' is defined but never used.","'FaMotorcycle' is defined but never used.","'Api' is defined but never used.",["274"],["275"],"'responsePartner' is assigned a value but never used.","'responseClient' is assigned a value but never used.","'responseEmployer' is assigned a value but never used.",["274"],["275"],"no-unused-vars","'editUser' is defined but never used.","'setVehicleStatus' is assigned a value but never used.","'setVehicleTipo' is assigned a value but never used.","'optionsStatus' is assigned a value but never used.","'optionsTipo' is assigned a value but never used.","'response' is assigned a value but never used.","'setBicicletaTipo' is assigned a value but never used.","'tipoAro' is assigned a value but never used.","'setMotoTipo' is assigned a value but never used.","'setBusStatus' is assigned a value but never used.","'setBusTipo' is assigned a value but never used.","'useEffect' is defined but never used.","'Select' is defined but never used.","'api' is defined but never used.","'history' is assigned a value but never used.","'setReservation' is assigned a value but never used.","'selectReservationsOptions' is defined but never used.","'responseLocation' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]